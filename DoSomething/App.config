<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <configSections>
        <section name="castle" type="Castle.Windsor.Configuration.AppDomain.CastleSectionHandler, Castle.Windsor" />
    </configSections>
    <appSettings>
        <add key="SunGardAS.Data.TennantConnectionStringName" value="Assurance" />
        <add key="ClientSettingsProvider.ServiceUri" value="" />
        <add key="ServicesAuthorizationHeaderKey"       value="Authorization" />
        <add key="AssuranceServicesBaseUrl"             value="http://assuranceservices" />
        <add key="IdentityServiceUrl"                   value="/AidSvc"/>
        <add key="AssuranceServicesAuthenticationUrl"   value="/auth/identity"/>
        <add key="AssuranceApiServiceClientId"          value="Assurance"/>
        <add key="AssuranceIdentityServiceUrl"          value="/AidSvc/api" />
        <add key="AssuranceIdentityGetAuthTokenUrl"     value="/auth/GetToken"/>
        <add key="AssuranceIdentitySsoRedirectUrl"      value="/auth/SsoRedirect"/>
        <add key="AssuranceIdentityAuthVerifyToken"     value="/auth/VerifyToken" />
        <add key="AssuranceIdentityAuthGrantType"       value="password" />

        <add key="SchedulerServiceUrl"                  value="/SchSvc"/>
        <add key="AssuranceSchedulerServiceUrl"         value="/schsvc/api" />
        <add key="SchedulerCreatePushJob"               value="/ScreenConfigPushJob/CreatePushJob" />
        <add key="SchedulerGetPushJobs"                 value="/ScreenConfigPushJob/GetPushJobs" />
        <add key="SchedulerGetRunningJobs"              value="/ScreenConfigPushJob/GetRunningJobs" />
        <add key="SchedulerGetAllScreensMarkedForPush"  value="/ScreenConfigPushJob/GetAllScreensMarkedForPush" />
        <add key="SchedulerCancelAllPushJobs"           value="/ScreenConfigPushJob/CancelAllPushJobs" />
        <add key="SchedulerGetDateTimeOfNextPushJob"    value="/ScreenConfigPushJob/GetDateTimeOfNextPushJob" />
        <add key="SchedulerExportPlanJob"               value="/Export/CreatePlanExportJob" />
        <add key="SchedulerExportAssessmentJob"         value="/Export/CreateAssessmentExportJob" />
        <add key="SchedulerApiClient"                   value="Scheduler"/>
        <add key="SchedulerApiClientSecret"             value="DCBD3841-CE27-4567-927A-5CCFB679ED14"/>

        <!-- Additional entries to add to the HtmlSanitizer -->
        <add key="HtmlSanitizerAdditionalSchemes" value="mailto,file,data" />
        <add key="HtmlSanitizerAdditionalTags" value="o,o:p" />
        <add key="HtmlSanitizerAdditionalAttributes" value="data-redactor,class,id,unselectable,on" />
        <add key="HtmlSanitizerAdditionalUriAttributes" value="" />
        <!--The AdditionalCssProperties setting is currently ignored because the xss code isn't checking css properties-->
        <add key="HtmlSanitizerAdditionalCssProperties" value="position,static,!important,border-image,none" />

        <!-- Add stored procedure timeout overrides here.  Format: key="<sproc name>Timeout" value="<seconds>"  -->
        <add key="up_GenerateEventDefNodesTimeout" value="7200" />
    </appSettings>
    <connectionStrings>
        <!-- In general, any connection string that is NOT customer specific needs to be set correctly in here (or in web.config)-->
        <!-- Customer/Tenant DB connections are built dynamically at runtime based on entries in the customer table in CORE-->
        <!-- CORE DB - This needs to be set correctly for the environment -->
        <add name="CoreDbContext" connectionString="metadata=res://*/CoreDb.CoreDbModel.csdl|res://*/CoreDb.CoreDbModel.ssdl|res://*/CoreDb.CoreDbModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=.\SQL2012;initial catalog=CORE;user id=sa;password=Ldrps10@;multipleactiveresultsets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
        <add name="Assurance" connectionString="Asynchronous Processing=True;MultipleActiveResultSets=True;Connect Timeout=180;TrustServerCertificate=True" providerName="System.Data.SqlClient" />
    </connectionStrings>
    <castle>
        <components>
            <component id="Data.DataConfigurationProvider" service="SunGardAS.Data.IDataConfigurationProvider, SunGardAS" type="SunGardAS.Data.DataConfigurationProvider, SunGardAS" lifestyle="transient">
            </component>
            <component id="Caching.MemoryCacheProvider" service="SunGardAS.Caching.ICacheProvider, SunGardAS" type="SunGardAS.CMS.Domain.Caching.MemoryCacheProvider, SunGardAS.CMS.Domain" lifestyle="transient">
            </component>
            <component id="Caching.CacheInvalidationEventFactory" service="SunGardAS.Caching.ICacheInvalidationEventFactory, SunGardAS" type="SunGardAS.Caching.CacheInvalidationEventFactory, SunGardAS" lifestyle="singleton">
            </component>
            <component id="Caching.MetadataProvider" service="SunGardAS.CMS.Domain.Caching.Metadata.IMetadataProvider, SunGardAS.CMS.Domain" type="SunGardAS.CMS.Domain.Caching.Metadata.MetadataProvider, SunGardAS.CMS.Domain" lifestyle="transient">
                <parameters>
                    <cacheProvider>${Caching.MemoryCacheProvider}</cacheProvider>
                    <cacheInvalidationEventFactory>${Caching.CacheInvalidationEventFactory}</cacheInvalidationEventFactory>
                    <metadataDependencyDetailProvider>${Caching.MetadataDependencyDetailProvider}</metadataDependencyDetailProvider>
                    <metadataAuditRelationshipProvider>${Caching.MetadataAuditRelationshipProvider}</metadataAuditRelationshipProvider>
                </parameters>
            </component>
            <component id="Caching.MetadataAuditRelationshipProvider" service="SunGardAS.CMS.Domain.Caching.Metadata.IMetadataAuditRelationshipProvider, SunGardAS.CMS.Domain" type="SunGardAS.CMS.Domain.Caching.Metadata.MetadataAuditRelationshipProvider, SunGardAS.CMS.Domain">
                <parameters>
                    <cacheProvider>${Caching.MemoryCacheProvider}</cacheProvider>
                </parameters>
            </component>
            <component id="Caching.MetadataDependencyDetailProvider" service="SunGardAS.CMS.Domain.Caching.Metadata.IMetadataDependencyDetailProvider, SunGardAS.CMS.Domain" type="SunGardAS.CMS.Domain.Caching.Metadata.MetadataDependencyDetailProvider, SunGardAS.CMS.Domain">
                <parameters>
                    <cacheProvider>${Caching.MemoryCacheProvider}</cacheProvider>
                </parameters>
            </component>
        </components>
    </castle>
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.1" />
    </startup>
</configuration>