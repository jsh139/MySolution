<?xml version="1.0"?>

<castle>

    <components>

        <component
          id="Caching.MemoryCacheProvider"
          service ="SunGardAS.Caching.ICacheProvider, SunGardAS"
          type ="SunGardAS.CMS.Domain.Caching.MemoryCacheProvider, SunGardAS.CMS.Domain"
          lifestyle="transient">
        </component>

        <component
             id="Caching.MetadataProvider"
             service ="SunGardAS.CMS.Domain.Caching.Metadata.IMetadataProvider, SunGardAS.CMS.Domain"
             type ="SunGardAS.CMS.Domain.Caching.Metadata.MetadataProvider, SunGardAS.CMS.Domain"
             lifestyle="transient">
            <parameters>
                <cacheProvider>${Caching.MemoryCacheProvider}</cacheProvider>
                <cacheInvalidationEventFactory>${Caching.CacheInvalidationEventFactory}</cacheInvalidationEventFactory>
                <metadataDependencyDetailProvider>${Caching.MetadataDependencyDetailProvider}</metadataDependencyDetailProvider>
                <metadataAuditRelationshipProvider>${Caching.MetadataAuditRelationshipProvider}</metadataAuditRelationshipProvider>
            </parameters>
        </component>

        <component
          id="Caching.MetadataAuditRelationshipProvider"
          service="SunGardAS.CMS.Domain.Caching.Metadata.IMetadataAuditRelationshipProvider, SunGardAS.CMS.Domain"
          type="SunGardAS.CMS.Domain.Caching.Metadata.MetadataAuditRelationshipProvider, SunGardAS.CMS.Domain">
            <parameters>
                <cacheProvider>${Caching.MemoryCacheProvider}</cacheProvider>
            </parameters>
        </component>

        <component
          id="Caching.MetadataDependencyDetailProvider"
          service="SunGardAS.CMS.Domain.Caching.Metadata.IMetadataDependencyDetailProvider, SunGardAS.CMS.Domain"
          type="SunGardAS.CMS.Domain.Caching.Metadata.MetadataDependencyDetailProvider, SunGardAS.CMS.Domain">
            <parameters>
                <cacheProvider>${Caching.MemoryCacheProvider}</cacheProvider>
            </parameters>
        </component>

        <component
            id="Caching.CacheInvalidationEventFactory"
            service ="SunGardAS.Caching.ICacheInvalidationEventFactory, SunGardAS"
            type ="SunGardAS.Caching.CacheInvalidationEventFactory, SunGardAS"
            lifestyle="singleton">
        </component>

        <component
            id="Data.PrimaryKeyGenerator"
            service="SunGardAS.CMS.Domain.Data.Metadata.KeyGenerators.IPrimaryKeyGenerator, SunGardAS.CMS.Domain"
            type="SunGardAS.CMS.Domain.Data.Metadata.KeyGenerators.PrimaryKeyGenerator, SunGardAS.CMS.Domain"
            lifestyle="transient">
        </component>

        <component
            id="Data.BizKeyGenerator"
            service="SunGardAS.CMS.Domain.Data.Metadata.KeyGenerators.IBizKeyGenerator, SunGardAS.CMS.Domain"
            type="SunGardAS.CMS.Domain.Data.Metadata.KeyGenerators.BizKeyGenerator, SunGardAS.CMS.Domain"
            lifestyle="transient">
        </component>

        <component
          id="Data.MetadataAwareSqlAdapter"
          service="SunGardAS.Data.Sql.ISqlAdapter, SunGardAS"
          type="SunGardAS.CMS.Domain.Data.Metadata.SqlAdapters.MetadataAwareSqlAdapter, SunGardAS.CMS.Domain"
          lifestyle="transient">
            <parameters>
                <metadataProvider>${Caching.MetadataProvider}</metadataProvider>
                <pickFromListProvider>${Caching.PickFromListProvider}</pickFromListProvider>
                <primaryKeyGenerator>${Data.PrimaryKeyGenerator}</primaryKeyGenerator>
                <bizKeyGenerator>${Data.BizKeyGenerator}</bizKeyGenerator>
            </parameters>
        </component>

        <component
          id="Data.SqlComposer"
          service ="SunGardAS.Data.Sql.ISqlComposer, SunGardAS"
          type ="SunGardAS.Data.Sql.SqlComposer, SunGardAS"
          lifestyle="transient">
            <parameters>
                <sqlAdapter>${Data.MetadataAwareSqlAdapter}</sqlAdapter>
            </parameters>
        </component>

        <component
          id="Data.SqlConnectionStringProvider"
          service ="SunGardAS.Data.ISqlConnectionStringProvider, SunGardAS"
          type ="SunGardAS.CMS.Domain.Data.SqlConnectionStringProvider, SunGardAS.CMS.Domain"
          lifestyle="transient">
        </component>

        <component
          id="Data.DataConfigurationProvider"
          service ="SunGardAS.Data.IDataConfigurationProvider, SunGardAS"
          type ="SunGardAS.Data.DataConfigurationProvider, SunGardAS"
          lifestyle="transient">
        </component>

        <component
          id="Data.SungardAsDatabase"
          service ="SunGardAS.Data.ISungardAsDatabase, SunGardAS"
          type ="SunGardAS.Data.SungardAsDatabase, SunGardAS"
          lifestyle="transient">
            <parameters>
                <sqlConnectionStringProvider>${Data.SqlConnectionStringProvider}</sqlConnectionStringProvider>
                <dataConfigurationProvider>${Data.DataConfigurationProvider}</dataConfigurationProvider>
                <sqlAdapter>${Data.MetadataAwareSqlAdapter}</sqlAdapter>
            </parameters>
        </component>

        <component
          id="Security.SecurityDataStore"
          service ="SunGardAS.CMS.Domain.DataStore.Security.ISecurityDataStore, SunGardAS.CMS.Domain"
          type ="SunGardAS.CMS.Domain.DataStore.Security.SecurityDataStore, SunGardAS.CMS.Domain"
          lifestyle="transient">
            <parameters>
                <sungardAsDatabase>${Data.SungardAsDatabase}</sungardAsDatabase>
            </parameters>
        </component>

        <component
          id="Caching.SecurityProvider"
          service ="SunGardAS.CMS.Domain.Caching.Security.ISecurityProvider, SunGardAS.CMS.Domain"
          type ="SunGardAS.CMS.Domain.Caching.Security.SecurityProvider, SunGardAS.CMS.Domain"
          lifestyle="transient">
            <parameters>
                <cacheProvider>${Caching.MemoryCacheProvider}</cacheProvider>
            </parameters>
        </component>

        <component
          id="Security.SecurityDataMarshaller"
          service ="SunGardAS.CMS.Domain.Security.ISecurityDataMarshaller, SunGardAS.CMS.Domain"
          type ="SunGardAS.CMS.Domain.Security.SecurityDataMarshaller, SunGardAS.CMS.Domain"
          lifestyle="transient">
            <parameters>
                <dataStore>${Security.SecurityDataStore}</dataStore>
                <securityProvider>${Caching.SecurityProvider}</securityProvider>
            </parameters>
        </component>

        <component
          id="Security.SecurityRoleProvider"
          service ="SunGardAS.Security.Engine.ISecurityRoleProvider, SunGardAS"
          type ="SunGardAS.CMS.Domain.Security.SecurityRoleProvider, SunGardAS.CMS.Domain"
          lifestyle="transient">
            <parameters>
                <marshaller>${Security.SecurityDataMarshaller}</marshaller>
            </parameters>
        </component>

        <component
          id="Security.SecurityEngine"
          service ="SunGardAS.Security.Engine.ISecurityEngine, SunGardAS"
          type ="SunGardAS.Security.Engine.SecurityEngine, SunGardAS"
          lifestyle="transient">
            <parameters>
                <roleProvider>${Security.SecurityRoleProvider}</roleProvider>
            </parameters>
        </component>

        <!-- Start Chain of Responsibility for the Security Handler Pipeline -->
        <component
          id="Security.SecurityHandlerPipelineStart"
          service ="SunGardAS.Security.Engine.ISecurityHandler, SunGardAS"
          type ="SunGardAS.Security.Engine.SecurityHandlerForCrud, SunGardAS"
          lifestyle="transient">
            <parameters>
                <nextHandler>${Security.SecurityHandlerForSystemPlan}</nextHandler>
            </parameters>
        </component>

        <component
          id="Security.SecurityHandlerForSystemPlan"
          service ="SunGardAS.Security.Engine.ISecurityHandler, SunGardAS"
          type ="SunGardAS.Security.Engine.SecurityHandlerForSystemPlan, SunGardAS"
          lifestyle="transient">
            <parameters>
                <nextHandler>${Security.SecurityHandlerForFeatures}</nextHandler>
            </parameters>
        </component>

        <component
          id="Security.SecurityHandlerForFeatures"
          service ="SunGardAS.Security.Engine.ISecurityHandler, SunGardAS"
          type ="SunGardAS.Security.Engine.SecurityHandlerForFeatures, SunGardAS"
          lifestyle="transient">
            <parameters>
                <nextHandler>${Security.SecurityHandlerForPlanning}</nextHandler>
            </parameters>
        </component>

        <component
          id="Security.SecurityHandlerForPlanning"
          service ="SunGardAS.Security.Engine.ISecurityHandler, SunGardAS"
          type ="SunGardAS.Security.Engine.SecurityHandlerForPlanning, SunGardAS"
          lifestyle="transient">
            <parameters>
                <nextHandler>${Security.SecurityHandlerForRollups}</nextHandler>
            </parameters>
        </component>

        <component
          id="Security.SecurityHandlerForRollups"
          service ="SunGardAS.Security.Engine.ISecurityHandler, SunGardAS"
          type ="SunGardAS.Security.Engine.SecurityHandlerForRollups, SunGardAS"
          lifestyle="transient">
            <parameters>
                <nextHandler>${Security.SecurityHandlerForImplicitPlanning}</nextHandler>
            </parameters>
        </component>

        <component
          id="Security.SecurityHandlerForImplicitPlanning"
          service ="SunGardAS.Security.Engine.ISecurityHandler, SunGardAS"
          type ="SunGardAS.Security.Engine.SecurityHandlerForImplicitPlanning, SunGardAS"
          lifestyle="transient">
        </component>
        <!-- End Chain of Responsibility for the Security Handler Pipeline -->

        <component
          id="Security.SecurityDataStore"
          service ="SunGardAS.CMS.Domain.DataStore.Security.ISecurityDataStore, SunGardAS.CMS.Domain"
          type ="SunGardAS.CMS.Domain.DataStore.Security.SecurityDataStore, SunGardAS.CMS.Domain"
          lifestyle="transient">
            <parameters>
                <sungardAsDatabase>${Data.SungardAsDatabase}</sungardAsDatabase>
            </parameters>
        </component>

        <component
            id="DataStore.DocumentDataStore"
            service ="SunGardAS.CMS.Domain.DataStore.DataManagement.IDocumentDataStore, SunGardAS.CMS.Domain"
            type ="SunGardAS.CMS.Domain.DataStore.DataManagement.DocumentDataStore, SunGardAS.CMS.Domain"
            lifestyle="transient">
        </component>

        <component
          id="DataStore.PlanningDataStore"
          service ="SunGardAS.CMS.Domain.DataStore.Planning.IPlanningDataStore, SunGardAS.CMS.Domain"
          type ="SunGardAS.CMS.Domain.DataStore.Planning.PlanningDataStore, SunGardAS.CMS.Domain"
          lifestyle="transient">
            <parameters>
                <metadataProvider>${Caching.MetadataProvider}</metadataProvider>
            </parameters>
        </component>

        <component
            id="Planning.PlanStatusAgent"
            service ="SunGardAS.CMS.Domain.Planning.Agents.IPlanStatusAgent, SunGardAS.CMS.Domain"
            type ="SunGardAS.CMS.Domain.Planning.Agents.PlanStatusAgent, SunGardAS.CMS.Domain"
            lifestyle="transient">
            <parameters>
                <planningDataStore>${DataStore.PlanningDataStore}</planningDataStore>
            </parameters>
        </component>

        <component
        id="Planning.PlanningService"
        service ="SunGardAS.CMS.Service.Planning.IPlanningService, SunGardAS.CMS.Service"
        type ="SunGardAS.CMS.Service.Planning.PlanningService, SunGardAS.CMS.Service"
        lifestyle="transient">
            <parameters>
                <planningDataStore>${DataStore.PlanningDataStore}</planningDataStore>
                <planStatusAgent>${Planning.PlanStatusAgent}</planStatusAgent>
                <securityMarshaller>${Security.SecurityDataMarshaller}</securityMarshaller>
            </parameters>
        </component>

        <component
          id="DataStore.WorkflowDataStore"
          service="SunGardAS.CMS.Domain.DataStore.Workflow.IWorkflowDataStore, SunGardAS.CMS.Domain"
          type="SunGardAS.CMS.Domain.DataStore.Workflow.WorkflowDataStore, SunGardAS.CMS.Domain"
          lifestyle="transient">
        </component>
        <component
          id="DataStore.WorkflowRibbonDataStore"
          service="SunGardAS.CMS.Domain.DataStore.Workflow.IWorkflowRibbonDataStore, SunGardAS.CMS.Domain"
          type="SunGardAS.CMS.Domain.DataStore.Workflow.WorkflowRibbonDataStore, SunGardAS.CMS.Domain"
          lifestyle="transient">
        </component>

        <!-- Planning services -->
        <component
          id="UserNotification.UserNotificationService"
          service ="SunGardAS.CMS.Service.UserNotification.IUserNotificationService, SunGardAS.CMS.Service"
          type ="SunGardAS.CMS.Service.UserNotification.UserNotificationService, SunGardAS.CMS.Service"
          lifestyle="transient">
        </component>

        <component
             id="Screens.ScreenConfigurationPushAgent"
             service="SunGardAS.CMS.Service.Screens.IScreenConfigurationPushAgent, SunGardAS.CMS.Service"
             type="SunGardAS.CMS.Service.Screens.ScreenConfigurationPushAgent, SunGardAS.CMS.Service"
             lifestyle="transient">
            <parameters>
                <scratchSpaceDataStore>${DataStore.ScratchSpaceDataStore}</scratchSpaceDataStore>
                <customerDataStore>${DataStore.CustomerDataStore}</customerDataStore>
                <ConfigPushDataStore>${DataStore.ConfigPushDataStore}</ConfigPushDataStore>

            </parameters>
        </component>

        <component
              id="DataStore.ScratchSpaceDataStore"
              service ="SunGardAS.CMS.Domain.DataStore.ScreenConfig.IScratchSpaceDataStore, SunGardAS.CMS.Domain"
              type ="SunGardAS.CMS.Domain.DataStore.ScreenConfig.ScratchSpaceDataStore, SunGardAS.CMS.Domain"
              lifestyle="transient">
            <parameters>
                <controlFactory>${Screens.ControlFactory}</controlFactory>
            </parameters>
        </component>

        <component
             id="Screens.ControlFactory"
             service="SunGardAS.CMS.Domain.Screens.Builder.IControlFactory, SunGardAS.CMS.Domain"
             type="SunGardAS.CMS.Domain.Screens.Builder.ControlFactory, SunGardAS.CMS.Domain"
             lifestyle="transient">
            <parameters>
                <pickFromListProvider>${Caching.PickFromListProvider}</pickFromListProvider>
                <metadataProvider>${Caching.MetadataProvider}</metadataProvider>
            </parameters>
        </component>

        <component id="DataStore.PickFromListDataStore" service="SunGardAS.CMS.Domain.DataStore.PickFromList.IPickFromListDataStore, SunGardAS.CMS.Domain" type="SunGardAS.CMS.Domain.DataStore.PickFromList.PickFromListDataStore, SunGardAS.CMS.Domain" lifestyle="transient">
            <parameters>
                <metadataProvider>${Caching.MetadataProvider}</metadataProvider>
                <pickFromListProvider>${Caching.PickFromListProvider}</pickFromListProvider>
            </parameters>
        </component>

        <component
            id="Caching.PickFromListProvider"
            service ="SunGardAS.CMS.Domain.Caching.PickFromList.IPickFromListProvider, SunGardAS.CMS.Domain"
            type ="SunGardAS.CMS.Domain.Caching.PickFromList.PickFromListProvider, SunGardAS.CMS.Domain"
            lifestyle="transient">
            <parameters>
                <cacheProvider>${Caching.MemoryCacheProvider}</cacheProvider>
            </parameters>
        </component>

        <component
            id="DataStore.CustomerDataStore"
            service="SunGardAS.CMS.Domain.DataStore.Customer.ICustomerDataStore, SunGardAS.CMS.Domain"
            type="SunGardAS.CMS.Domain.DataStore.Customer.CustomerDataStore, SunGardAS.CMS.Domain"
            lifestyle="transient">
        </component>

        <component
            id="DataStore.SecUserDataStore"
            service="SunGardAS.CMS.Domain.DataStore.Security.ISecUserDataStore, SunGardAS.CMS.Domain"
            type="SunGardAS.CMS.Domain.DataStore.Security.SecUserDataStore, SunGardAS.CMS.Domain"
            lifestyle="transient">
        </component>

        <component
             id="DataStore.ConfigPushDataStore"
             service ="SunGardAS.CMS.Domain.DataStore.ScreenConfig.IConfigPushDataStore, SunGardAS.CMS.Domain"
             type ="SunGardAS.CMS.Domain.DataStore.ScreenConfig.ConfigPushDataStore, SunGardAS.CMS.Domain"
             lifestyle="transient">
        </component>

        <component
            id="ScreenConfig.PushEngine"
            service="SunGardAS.CMS.Domain.DataStore.ScreenConfig.Push.IScreenConfigPushEngine, SunGardAS.CMS.Domain"
            type="SunGardAS.CMS.Domain.DataStore.ScreenConfig.Push.ScreenConfigPushEngine, SunGardAS.CMS.Domain"
            lifestyle="transient">
        </component>

        <component
            id="ScreenConfig.SubstituteContainersPushHandler"
            service="SunGardAS.CMS.Domain.Caching.Screens.IUiSubstituteProvider, SunGardAS.CMS.Domain"
            type="SunGardAS.CMS.Domain.Caching.Screens.UiSubstituteProvider, SunGardAS.CMS.Domain"
            lifestyle="transient">
        </component>

        <component
            id="Caching.UISubstituteProvider"
            service="SunGardAS.CMS.Domain.DataStore.ScreenConfig.Push.SubstituteContainers.SubstituteContainersPushHandler, SunGardAS.CMS.Domain"
            type="SunGardAS.CMS.Domain.DataStore.ScreenConfig.Push.SubstituteContainers.SubstituteContainersPushHandler, SunGardAS.CMS.Domain"
            lifestyle="transient">
        </component>

        <component
            id="ScreenConfig.ScreenConfigPushContextProvider"
            service="SunGardAS.CMS.Domain.DataStore.ScreenConfig.Push.IScreenConfigPushContextProvider, SunGardAS.CMS.Domain"
            type="SunGardAS.CMS.Domain.DataStore.ScreenConfig.Push.ScreenConfigPushContextProvider, SunGardAS.CMS.Domain"
            lifestyle="transient">
        </component>

        <component
            id="ScreenConfig.AddSharedControlHandler"
            service="SunGardAS.CMS.Domain.DataStore.ScreenConfig.Push.SubstituteContainers.IAddSharedControlHandler, SunGardAS.CMS.Domain"
            type="SunGardAS.CMS.Domain.DataStore.ScreenConfig.Push.SubstituteContainers.AddSharedControlHandler, SunGardAS.CMS.Domain"
            lifestyle="transient">
        </component>

        <component
            id="ScreenConfig.RemoveSharedControlHandler"
            service="SunGardAS.CMS.Domain.DataStore.ScreenConfig.Push.SubstituteContainers.IRemoveSharedControlHandler, SunGardAS.CMS.Domain"
            type="SunGardAS.CMS.Domain.DataStore.ScreenConfig.Push.SubstituteContainers.RemoveSharedControlHandler, SunGardAS.CMS.Domain"
            lifestyle="transient">
        </component>

        <component
            id="DataStore.MdPickFromTableDataStore"
            service="SunGardAS.CMS.Domain.DataStore.Metadata.IMdPickFromTableDataStore, SunGardAS.CMS.Domain"
            type="SunGardAS.CMS.Domain.DataStore.Metadata.MdPickFromTableDataStore, SunGardAS.CMS.Domain"
            lifestyle="transient">
        </component>

        <component
            id="DataStore.FullTextIndex"
            service="SunGardAS.CMS.Domain.DataStore.ScreenConfig.IFullTextIndexDataStore, SunGardAS.CMS.Domain"
            type="SunGardAS.CMS.Domain.DataStore.ScreenConfig.FullTextIndexDataStore, SunGardAS.CMS.Domain"
            lifestyle="transient">
        </component>

        <component
            id="DataStore.MdPickFromListDataStore"
            service="SunGardAS.CMS.Domain.DataStore.Metadata.IMdPickFromListDataStore, SunGardAS.CMS.Domain"
            type="SunGardAS.CMS.Domain.DataStore.Metadata.MdPickFromListDataStore, SunGardAS.CMS.Domain"
            lifestyle="transient">
        </component>

        <component
            id="DataStore.MdColumnDataStore"
            service="SunGardAS.CMS.Domain.DataStore.Metadata.IMdColumnDataStore, SunGardAS.CMS.Domain"
            type="SunGardAS.CMS.Domain.DataStore.Metadata.MdColumnDataStore, SunGardAS.CMS.Domain"
            lifestyle="transient">
        </component>

        <component
           id="DataStore.ScreenConfigSprocDataStore"
           service="SunGardAS.CMS.Domain.DataStore.ScreenConfig.IScreenConfigSprocDataStore, SunGardAS.CMS.Domain"
           type="SunGardAS.CMS.Domain.DataStore.ScreenConfig.ScreenConfigSprocDataStore, SunGardAS.CMS.Domain"
           lifestyle="transient">
        </component>

        <component
            id="DataStore.FormDataStore"
            service="SunGardAS.CMS.Domain.DataStore.FormManagement.IFormDataStore, SunGardAS.CMS.Domain"
            type="SunGardAS.CMS.Domain.DataStore.FormManagement.FormDataStore, SunGardAS.CMS.Domain"
            lifestyle="transient">
        </component>

        <component
            id="ScreenConfig.UpdateSharedControlHandler"
            service="SunGardAS.CMS.Domain.DataStore.ScreenConfig.Push.SubstituteContainers.IUpdateSharedControlHandler, SunGardAS.CMS.Domain"
            type="SunGardAS.CMS.Domain.DataStore.ScreenConfig.Push.SubstituteContainers.UpdateSharedControlHandler, SunGardAS.CMS.Domain"
            lifestyle="transient">
        </component>

        <component
           id="UI.ScreenConfigService"
           service="SunGardAS.CMS.Service.Screens.IScreenConfigurationService, SunGardAS.CMS.Service"
           type="SunGardAS.CMS.Service.Screens.ScreenConfigurationService, SunGardAS.CMS.Service"
           lifestyle="transient">
            <parameters>
                <screenBuilder>${Screens.ScreenConfigurationUIBuilder}</screenBuilder>
                <ssDataStore>${DataStore.ScratchSpaceDataStore}</ssDataStore>

            </parameters>
        </component>

        <component
            id="Screens.ScreenConfigurationUIBuilder"
            service ="SunGardAS.CMS.Domain.Screens.Builder.IUIBuilder, SunGardAS.CMS.Domain"
            type ="SunGardAS.CMS.Domain.Screens.Builder.ScreenConfigurationUIBuilder, SunGardAS.CMS.Domain"
            lifestyle="transient">
            <parameters>
                <controlFactory>${Screens.ControlFactory}</controlFactory>
            </parameters>
        </component>

        <component
            id="DataStore.ScratchSpaceDataStore"
            service ="SunGardAS.CMS.Domain.DataStore.ScreenConfig.IScratchSpaceDataStore, SunGardAS.CMS.Domain"
            type ="SunGardAS.CMS.Domain.DataStore.ScreenConfig.ScratchSpaceDataStore, SunGardAS.CMS.Domain"
            lifestyle="transient">
            <parameters>
                <controlFactory>${Screens.ControlFactory}</controlFactory>
            </parameters>
        </component>

        <component
          id="Authentication.PasswordHasherService"
          service="SunGardAS.Encryption.IPasswordHasherService, SunGardAS"
          type="SunGardAS.Encryption.PasswordHasherService, SunGardAS"
          lifestyle="transient">
        </component>

        <component
              id="DataStore.ApiServiceClientDataStore"
              service="SunGardAS.CMS.Domain.DataStore.Identity.IApiServiceClientDataStore, SunGardAS.CMS.Domain"
              type="SunGardAS.CMS.Domain.DataStore.Identity.ApiServiceClientDataStore, SunGardAS.CMS.Domain"
              lifestyle="transient">
        </component>

        <component
            id="DataStore.RefreshTokenDataStore"
            service="SunGardAS.CMS.Domain.DataStore.Identity.IRefreshTokenDataStore, SunGardAS.CMS.Domain"
            type="SunGardAS.CMS.Domain.DataStore.Identity.RefreshTokenDataStore, SunGardAS.CMS.Domain"
            lifestyle="transient">
        </component>

        <component
          id="Authentication.AuthenticationService"
          service="SunGardAS.CMS.Service.Authentication.IAuthenticationService, SunGardAS.CMS.Service"
          type="SunGardAS.CMS.Service.Authentication.AuthenticationService, SunGardAS.CMS.Service"
          lifestyle="transient">
            <parameters>
                <customerDataStore>${DataStore.CustomerDataStore}</customerDataStore>
                <secUserDataStore>${DataStore.SecUserDataStore}</secUserDataStore>
                <passwordHasherService>${Authentication.PasswordHasherService}</passwordHasherService>
                <apiServiceClientDataStore>${DataStore.ApiServiceClientDataStore}</apiServiceClientDataStore>
                <refreshTokenDataStore>${DataStore.RefreshTokenDataStore}</refreshTokenDataStore>
            </parameters>
        </component>

        <component
          id="DataStore.ScheduledJobsDataStore"
          service ="SunGardAS.CMS.Domain.DataStore.Scheduler.IScheduledJobsDataStore, SunGardAS.CMS.Domain"
          type ="SunGardAS.CMS.Domain.DataStore.Scheduler.ScheduledJobsDataStore, SunGardAS.CMS.Domain"
          lifestyle="transient">
        </component>

        <component
          id="Ncache.NcacheProvider"
          service="SunGardAS.Caching.NCache.INcacheProvider, SunGardAS"
          type="SunGardAS.Caching.NCache.NcacheProvider, SunGardAS"
          lifestyle="transient">
        </component>

        <component
              id="Planning.PlanExportService"
              service ="SunGardAS.CMS.Service.Planning.IPlanExportService, SunGardAS.CMS.Service"
              type ="SunGardAS.CMS.Service.Planning.PlanExportService, SunGardAS.CMS.Service"
              lifestyle="transient">
        </component>

        <component
           id="DataStore.SystemNotificationDataStore"
           service ="SunGardAS.CMS.Domain.DataStore.SystemNotification.ISystemNotificationDataStore, SunGardAS.CMS.Domain"
           type ="SunGardAS.CMS.Domain.DataStore.SystemNotification.SystemNotificationDataStore, SunGardAS.CMS.Domain"
           lifestyle="transient">
        </component>

        <component
            id="DataStore.EventDataStore"
            service="SunGardAS.CMS.Domain.DataStore.IncidentManagement.IEventDataStore, SunGardAS.CMS.Domain"
            type="SunGardAS.CMS.Domain.DataStore.IncidentManagement.EventDataStore, SunGardAS.CMS.Domain"
            lifestyle="transient">
        </component>

        <component 
            id="ContinuityDomain.EventService" 
            service="SunGardAS.Services.Domain.ContinuityDomain.IEventService, SunGardAS.Services.Domain.ContinuityDomain" 
            type="SunGardAS.Services.Domain.ContinuityDomain.EventService, SunGardAS.Services.Domain.ContinuityDomain" 
            lifestyle="transient">
            <parameters>
                <eventDataStore>${DataStore.EventDataStore}</eventDataStore>
            </parameters>
        </component>

    </components>
</castle>
